
# Common env
NODE_ENV=development
HASURA_HOST=hasura
POSTGRES_HOST=database
POSTGRES_PORT=5432
HASURA_PORT=8080
PORT=4000

# Gateway
SERVERLESS_URL=http://host.docker.internal:${PORT}

# PostgreSQL
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DATABASE=postgres

# Hasura GraphQL Engine
HASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
HASURA_GRAPHQL_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
HASURA_GRAPHQL_ENABLE_CONSOLE=true
HASURA_GRAPHQL_DEV_MODE=true
HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
HASURA_GRAPHQL_ADMIN_SECRET=myadminsecretkey
HASURA_GRAPHQL_AUTH_HOOK=${SERVERLESS_URL}/auth/authorize

#Code gen 
CODEGEN_HASURA_ENDPOINT=http://localhost:8080/v1/graphql
CODEGEN_HASURA_GRAPHQL_ADMIN_SECRET=myadminsecretkey

# Function app
JWT_SECRET_ACCESS_TOKEN=ef1ca7491dee871be5f0e33a6d3f3e631bc8a69136fa49fddf3f3ca5bf3bd714
JWT_ACCESS_TOKEN_EXPIRATION_TIME = '5h'
JWT_SECRET_REFRESH_TOKEN=secretkey
JWT_REFRESH_TOKEN_EXPIRATION_TIME = '1d'
OPENAI_API_KEY = 'sk-'
HASURA_ENDPOINT=http://host.docker.internal:${HASURA_PORT}/v1/graphql
HASURA_GRAPHQL_ADMIN_SECRET=myadminsecretkey